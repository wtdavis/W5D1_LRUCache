[0m[1;32mInteger#hash[m

(from ruby core)
[32mImplementation from Object[m
------------------------------------------------------------------------
  obj.hash    -> integer

------------------------------------------------------------------------

Generates an Integer hash value for this object.  This function must
have the property that [7ma.eql?(b)[m implies [7ma.hash == b.hash[m.

The hash value is used along with #eql? by the Hash class to determine
if two objects reference the same hash key.  Any hash value that exceeds
the capacity of an Integer will be truncated before being used.

The hash value for an object may not be identical across invocations or
implementations of Ruby.  If you need a stable identifier across Ruby
invocations and implementations you will need to generate one with a
custom method.

Certain core classes such as Integer use built-in hash calculations and
do not call the #hash method when used as a hash key.


(from ruby core)
[32mImplementation from Object[m
------------------------------------------------------------------------
  obj.hash    -> integer

------------------------------------------------------------------------

Generates an Integer hash value for this object.  This function must
have the property that [7ma.eql?(b)[m implies [7ma.hash == b.hash[m.

The hash value is used along with #eql? by the Hash class to determine
if two objects reference the same hash key.  Any hash value that exceeds
the capacity of an Integer will be truncated before being used.

The hash value for an object may not be identical across invocations or
implementations of Ruby.  If you need a stable identifier across Ruby
invocations and implementations you will need to generate one with a
custom method.

Certain core classes such as Integer use built-in hash calculations and
do not call the #hash method when used as a hash key.


